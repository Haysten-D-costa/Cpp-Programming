                -------------------------------------------------------------------------------------
                PROGRAMMER DETAILS :
                -------------------------------------------------------------------------------------
                | * NAME     : Haysten D'costa                   |  
                | * ROLL NO. : 21co56                            |   
                | * GENDER   : Male                              |  
                | * COURSE   : BE Computer Engineering           |  
                | * SEMESTER : SEM III                           |  
                | * YEAR     : 2nd Year                          |  
                | * CLASS    : Comp B                            |  
                | * BATCH    : P3                                |  
                | * CONTACT  : **********                        |  
                | * EMAIL    :                                   |  
                |             -> (College)  21co56@gmail.com     |     
                |             -> (Personal) haystend@gmail.com   |    
                --------------------------------------------------------------------------------------
                PROGRAM DETAILS : 
                --------------------------------------------------------------------------------------
                * CREATED BY     : Master Haysten D'costa
                * SPECIALITY     : OBJECT ORIENTED PROGRAMMING SYSTEM Concepts (OOPS).
                * PURPOSE        : OOPS Mini-Project (2nd Year)
                * ABOUT          : College Management System
                --------------------------------------------------------------------------------------
                NOTE : This is a college management system Program, 
                       which enables easy, secure, risk free data sorting and storage of 
                       students registering in this college.....
                       The System is reliable to store proper data for safety purpose.........
                
                WORKING : This is an easy to use management system, which means its interface
                is easy to understand, and can be used by anyone if has access to the user 
                Password.
                  (*) This system has mainly two Sections :
                        1. Students section, 
                        2. Teachers section...Each section involving its own files and 
                           classes, data members and functionings....
                  
                  This program enables to store member data such as :
                    -> Id, 
                    -> Name, 
                    -> Roll Number,
                    -> Email Address,
                    -> Branch, Department, Qualification etc....

                (*) COMPONENTS OF THE PROGRAM :
                There is one main Abstract class called the CollegeDetails which contains 3 main 
                pure virtual functions :
                    1. -> virtual void createFile() = 0;
                    2. -> virtual void searchDetails() = 0;
                    3. -> virtual void setDetails() = 0; 

                (*) class CollegeDetails { //Main Abstract class...
                        protected :
                            string id;
                            string roll;
                            string name;
                            string email;
                            string branch;
                            string department;
                            string qualification;
                        public :
                            virtual void createFile() = 0;
                            virtual void searchDetails() = 0;
                            virtual void setDetails() = 0;  
                    };
                The Above class is derived by two other main classes, namely the : 
                    -> CollegeStudents and 
                    -> CollegeTeachers, which define their own version for each of the function....
                For example, 
                [STUDENTS CLASS] : 

                class CollegeStudents : public CollegeDetails {  //STUDENTS CLASS **********
                    void setDetails() {
                        cin.ignore();
                        cout << "\n\t\t\tEnter Name : "; cin >> name;
                        cout << "\t\t\tEnter Roll Number : "; cin >> roll;
                        cout << "\t\t\tEnter College Email : "; cin >> email;
                        cout << "\t\t\tEnter Branch : "; cin >> branch;
                    }
                    void createFile() {  //FOR STUDENTS
                        ofstream out;
                        out.open("Students.txt", ios::app);
                        out << name << endl;
                        out << roll << endl;
                        out << email << endl;
                        out << branch << endl;
                        out.close();
                    }
                    void searchDetails() {  //FOR STUDENTS
                        ifstream in;
                        string searchsName;
                        cout << "\n\t\t\tEnter Name of student to be searched : "; cin.ignore();  
                        //FLUSHING STREAM...
                        getline(cin, searchsName);

                        in.open("Students.txt");
                        int count = {};
                        string str1, str2, str3, str4;
                        while(!in.eof() && !in.fail()) {
                            in >> str1;
                            in >> str2;
                            in >> str3;
                            in >> str4;
                            if(searchsName == str1) {  //CHECKS IF ENTERED NAME MATCHES THE NA
                            MES IN FILE...
                                count++;
                                cout << "\n\n\t\t\tRequired Details : \n";
                                cout << "\n"
                                    << "\t\t\tName          : " << setw(25) << str1 << endl
                                    << "\t\t\tRoll no       : " << setw(25) << str2 << endl
                                    << "\t\t\tBranch        : " << setw(25) << str3 << endl
                                    << "\t\t\tCollege Email : " << setw(25) << str4 << endl;
                            }
                        }
                        in.close();
                        if(count == 0) { cout << "\n\t\t\tNo such Entries found !\n"; }
                    }
                };


                similarly, 
                [TEACHERS CLASS] :
                class CollegeTeachers : public CollegeDetails {  //TEACHERS CLASS *****************
                ******************
                    void setDetails() {
                        cin.ignore();
                        cout << "\t\t\tEnter ID : "; cin >> id;
                        cout << "\n\t\t\tEnter Name : "; cin >> name;
                        cout << "\t\t\tEnter Email : "; cin >> email;
                        cout << "\t\t\tEnter Department : "; cin >> department;
                        cout << "\t\t\tEnter Qualification : "; cin >> qualification;
                    }
                    void createFile() { //FOR TEACHERS
                        ofstream out;
                        out.open("Teachers.txt", ios::app);
                        out << id << endl
                            << name << endl
                            << email << endl
                            << department << endl
                            << qualification << endl;
                        out.close();
                    }
                    void searchDetails() {  //FOR TEACHERS
                        ifstream in;
                        string searchsName;
                        cout << "\n\t\t\tEnter Name of student to be searched : "; cin.ignore();
                          //FLUSHING STREAM...
                        getline(cin, searchsName);

                        in.open("Teachers.txt");
                        int count = {};
                        string str1, str2, str3, str4;
                        while(!in.eof() && !in.fail()) {
                            in >> str1;
                            in >> str2;
                            in >> str3;
                            in >> str4;
                            if(searchsName == str1) {  //CHECKS IF ENTERED NAME MATCHES THE NAM
                            ES IN FILE...
                                count++;
                                cout << "\n\n\t\t\tRequired Details : \n";
                                cout << "\n"
                                    << "\t\t\tName          : " << setw(25) << str1 << endl
                                    << "\t\t\tRoll no       : " << setw(25) << str2 << endl
                                    << "\t\t\tBranch        : " << setw(25) << str3 << endl
                                    << "\t\t\tCollege Email : " << setw(25) << str4 << endl;
                            }
                        }
                        in.close();
                        if(count == 0) { cout << "\n\t\t\tNo such Entries found !\n"; }
                    }
                };

                For Even more info about the same Contact,
                Haysten D'costa.....
                **********.
                -------------------------------------------------------------------------------------







                                                        Will be updated soon  .......................















